version: 2

references:

  # docker container for python only jobs
  python_only_config: &python_only_config
    working_directory: ~/mixt
    docker:
      - image: circleci/python:3.6.5
        environment: &default_environ
          MIXT_DEBUG=True

  # build steps to save/restore the directory used by pip to cache downloaded packages
  save_pip_cache: &save_pip_cache
    save_cache:
      key: v1-pip-cache-{{ .Branch }}-{{ .Revision }}
      paths:
        - ~/.cache/pip
  restore_pip_cache: &restore_pip_cache
    restore_cache:
      keys:
        - v1-pip-cache-{{ .Branch }}-{{ .Revision }}
        - v1-pip-cache-{{ .Branch }}
        - v1-pip-cache

  # shortcut to attach the workspace before each job
  attach_workspace: &attach_workspace
    attach_workspace:
      at: "~/"


# jobs definition: they are used in ``workflows``
jobs:

  # get the code from git and save the repo to pass it to the next job
  checkout_code:
    <<: *python_only_config
    steps:
      - checkout
      - persist_to_workspace:
          root: "~/"
          paths:
            - mixt

  # install the project code and dependencies and save the venv and pip cache
  install_code:
    <<: *python_only_config
    steps:
      - *attach_workspace
      - *restore_pip_cache
      - run:
          name: Install code
          command: |
            python -m venv ~/venv
            source ~/venv/bin/activate
            pip install --upgrade pip
            make dev
      - *save_pip_cache
      - persist_to_workspace:
          root: "~/"
          paths:
            - venv
            - mixt

  # 4 next jobs are linters: mypy, black, flake8 and pylint
  # they all use the workspace
  linter_mypy:
    <<: *python_only_config
    steps:
      - *attach_workspace
      - run:
          name: Run "mypy" linter
          command: |
            source ~/venv/bin/activate
            make mypy

  linter_black:
    <<: *python_only_config
    steps:
      - *attach_workspace
      - run:
          name: Run "black" linter
          command: |
            source ~/venv/bin/activate
            make check-black

  linter_flake8:
    <<: *python_only_config
    steps:
      - *attach_workspace
      - run:
          name: Run "flake8" linter
          command: |
            source ~/venv/bin/activate
            make flake8

  linter_pylint:
    <<: *python_only_config
    steps:
      - *attach_workspace
      - run:
          name: Run "pylint" linter
          command: |
            source ~/venv/bin/activate
            make pylint

  # run the tests
  run_tests:
    <<: *python_only_config
    steps:
      - *attach_workspace
      - run:
          name: Run tests
          command: |
            source ~/venv/bin/activate
            make test


  # run check and tests for every commit in the history for which it is not already done
  check_every_commit:
    <<: *python_only_config
    steps:
      - *attach_workspace
      - *restore_pip_cache
      - type: shell
        name: Install system dependencies
        command: sudo apt-get update -qq -y && sudo apt-get install -y curl jq
      - run:
          name: Check every commits
          command: |
            source ~/venv/bin/activate
            .circleci/check-every-commit.sh

  # will build the python package, using the tag as the base version, suffixed with info from git describe if not a tag
  build_python_package:
    <<: *python_only_config
    steps:
      - *attach_workspace
      - run:
          name: Build package
          command: |
            sed -i -e "s/^version = .*$/version = $(git describe --tags)/" setup.cfg
            source ~/venv/bin/activate
            make dist
      - store_artifacts:
          path: dist/
      - persist_to_workspace:
          root: "~/"
          paths:
            - mixt/dist

workflows:
  version: 2

  marsha:
    jobs:
      - checkout_code
      - install_code:
          requires:
            - checkout_code
      - linter_mypy:
          requires:
            - install_code
      - linter_black:
          requires:
            - install_code
      - linter_flake8:
          requires:
            - install_code
      - linter_pylint:
          requires:
            - install_code
      - run_tests:
          requires:
            - install_code
      - check_every_commit:
          requires:
            - install_code
      - build_python_package:
          requires:
            - linter_mypy
            - linter_black
            - linter_flake8
            - linter_pylint
            - run_tests
